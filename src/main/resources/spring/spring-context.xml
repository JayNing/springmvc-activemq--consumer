<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:amq="http://activemq.apache.org/schema/core"
	   xmlns:jms="http://www.springframework.org/schema/jms"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.1.xsd
           http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task-4.1.xsd
			http://www.springframework.org/schema/jms
     	   http://www.springframework.org/schema/jms/spring-jms-4.1.xsd
			 http://activemq.apache.org/schema/core
      		  http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd"
	   default-autowire="byName" default-lazy-init="false">


<!-- 采用注释的方式配置bean -->
	<context:annotation-config />

	<context:property-placeholder location="classpath:service.properties" />
	
	<!-- 配置要扫描的包,扫描项目中的所有含有注解的类 -->
    <context:component-scan base-package="com.ning.*" />

	<!-- 配置ActiveMQ方案二    start -->

	<!-- 连接 activemq-->
	<amq:connectionFactory id="amqConnectionFactory" brokerURL="${activemq_url}" userName="${activemq_username}" password="${activemq_password}"/>

	<!-- 这里可以采用连接池的方式连接PooledConnectionFactoryBean -->
	<bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
		<!-- 配置连接 -->
		<property name="targetConnectionFactory" ref="amqConnectionFactory"/>
		<!-- 会话的最大连接数 -->
		<property name="sessionCacheSize" value="100"/>
	</bean>

	<!-- 定义消息队列queue类型 -->
	<bean id="ningQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 定义名称 -->
		<constructor-arg index="0" value="ningQueue"/>
	</bean>
	<!-- 定义消息队列topic类型 -->
	<bean id="ningTopic" class="org.apache.activemq.command.ActiveMQTopic">
		<!-- 定义名称 -->
		<constructor-arg index="0" value="ningTopic"/>
	</bean>

	<!-- 配置JMS模板（topic），Spring提供的JMS工具类，它发送、接收消息。 -->
	<!-- 保留jmsTemplate的配置，为了测试发送消息，生产者可根据需要不配置监听 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="defaultDestination" ref="ningQueue"/>
		<!-- 非pub/sub模型（发布/订阅），true为topic,false为queue -->
		<property name="pubSubDomain" value="false"/>
	</bean>

	<!-- 监听方式，这种方式更实用，可以一直监听消息 -->
	<bean id="consumerMessageListen" class="com.ning.listener.ConsumerMessageListener"/>

	<bean id="defaultMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory"/>
		<!-- 注册activemq名称 -->
		<property name="destination" ref="ningQueue"/>
		<property name="messageListener" ref="consumerMessageListen"/>
	</bean>

	<!-- 配置ActiveMQ方案二    end -->

	<!-- 配置ActiveMQ方案一    start -->

	<!--&lt;!&ndash;  真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 &ndash;&gt;-->
	<!--<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">-->
		<!--<property name="brokerURL" value="tcp://localhost:61616" />-->
	<!--</bean>-->

	<!--&lt;!&ndash; Spring用于管理真正的ConnectionFactory的ConnectionFactory &ndash;&gt;-->
	<!--<bean id="connectionFactory"-->
		  <!--class="org.springframework.jms.connection.SingleConnectionFactory">-->
		<!--&lt;!&ndash; 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory &ndash;&gt;-->
		<!--<property name="targetConnectionFactory" ref="targetConnectionFactory" />-->
	<!--</bean>-->

	<!--&lt;!&ndash; Spring提供的JMS工具类，它可以进行消息发送、接收等 &ndash;&gt;-->
	<!--<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">-->
		<!--&lt;!&ndash; 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 &ndash;&gt;-->
		<!--<property name="connectionFactory" ref="connectionFactory" />-->
	<!--</bean>-->

	<!--&lt;!&ndash;这个是队列目的地 &ndash;&gt;-->
	<!--<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">-->
		<!--<constructor-arg>-->
			<!--<value>queue</value>-->
		<!--</constructor-arg>-->
	<!--</bean>-->

	<!--&lt;!&ndash;这个是主题目的地，一对多的&ndash;&gt;-->
	<!--<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">-->
		<!--<constructor-arg value="topic"/>-->
	<!--</bean>-->

	<!--&lt;!&ndash; 消息监听器 &ndash;&gt;-->
	<!--<bean id="consumerMessageListener"-->
		  <!--class="com.ning.listener.ConsumerMessageListener" />-->
	<!--&lt;!&ndash; 消息监听容器 &ndash;&gt;-->
	<!--<bean id="jmsContainer"-->
		  <!--class="org.springframework.jms.listener.DefaultMessageListenerContainer">-->
		<!--<property name="connectionFactory" ref="connectionFactory" />-->
		<!--<property name="destination" ref="queueDestination" />-->
		<!--<property name="messageListener" ref="consumerMessageListener" />-->
	<!--</bean>-->

	<!-- 配置ActiveMQ方案一    end -->

</beans>